#include "L1Trigger/UCT2015/interface/jetcorrections.h"

double jetcorr(double ptraw, int ieta, unsigned int pu) {

  double calib[] = {  // calib_pudefault
    0.961508, -0.961508, 15.947,
    1.36807, -1.36807, 6.68028,
    1.44409, -1.44409, 8.29767,
    1.51892, -1.51892, 13.5637,
    1.24288, -1.24288, 23.8283,
    1.19104, -1.19104, 29.0307,
    1.22199, -1.22199, 30.0691,
    1.22154, -1.22154, 30.5915,
    1.20026, -1.20026, 28.6067,
    1.15149, -1.15149, 27.4127,
    1.16534, -1.16534, 25.4566,
    1.16308, -1.16308, 25.8007,
    1.19049, -1.19049, 27.2719,
    1.21544, -1.21544, 28.4664,
    1.24526, -1.24526, 30.216,
    1.20326, -1.20326, 30.2056,
    1.17776, -1.17776, 29.7033,
    1.23713, -1.23713, 23.7761,
    1.49303, -1.49303, 14.181,
    1.46926, -1.46926, 7.82764,
    1.32482, -1.32482, 7.18464,
    0.974094, -0.974094, 15.9478
  };
  //==============================================

  double alpha = calib[3*ieta + 0];
  double beta  = calib[3*ieta + 1];
  double gamma = calib[3*ieta + 2];

  double pt =  alpha * ptraw + beta * pu + gamma;
  return pt;
}

double jetcorrUIC(double ptraw, int ieta, unsigned int pu) {

  double calib[] = {  // calib_puUIC
    1.04423, -1.09017, 13.5378,
    1.36887, -2.14366, 8.37627,
    1.43954, -2.25431, 10.1702,
    1.48093, -2.82625, 18.5013,
    1.2272, -2.25491, 27.179,
    1.18273, -2.08923, 31.7074,
    1.22839, -1.44659, 29.0857,
    1.22846, -1.33895, 29.088,
    1.20654, -1.31506, 27.1161,
    1.15725, -1.26133, 25.9607,
    1.17086, -1.27616, 23.9877,
    1.16862, -1.27373, 24.3519,
    1.19648, -1.30409, 25.7887,
    1.22124, -1.33107, 26.9854,
    1.25245, -1.36509, 28.6541,
    1.20829, -1.42292, 29.2688,
    1.16759, -2.06248, 32.3936,
    1.21936, -2.24049, 27.1477,
    1.44564, -2.75891, 19.1133,
    1.46288, -2.29087, 9.76789,
    1.3305, -2.08356, 8.76516,
    1.04901, -1.09517, 13.6107
  };
  //==============================================

  // std::cout << " JetCorr: " << ptraw << " " << ieta << " " << pu << std::endl;
  double alpha = calib[3*ieta + 0];
  double beta  = calib[3*ieta + 1];
  double gamma = calib[3*ieta + 2];

  double pt =  alpha * ptraw + beta * pu + gamma;
  return pt;
}

